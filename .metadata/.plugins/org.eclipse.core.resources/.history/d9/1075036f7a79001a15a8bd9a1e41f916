package spring.web.controller;

import java.text.DecimalFormat;
import java.util.Calendar;
import java.util.List;

import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import spring.web.svc.ShopService;
import spring.web.vo.CartListVO;
import spring.web.vo.CartVO;
import spring.web.vo.MemberVO;
import spring.web.vo.OrderDetailVO;
import spring.web.vo.OrderListVO;
import spring.web.vo.OrderVO;

@Controller
@RequestMapping("/shop/*")
public class ShopController {
	private static final Logger logger = LoggerFactory.getLogger(ShopController.class);

	@Autowired
	ShopService service;

	@ResponseBody
	@RequestMapping(value = "/addCart", method = RequestMethod.POST)
	public int addCart(CartVO vo, HttpSession session) throws Exception {
		int result = 0;
		MemberVO member = (MemberVO) session.getAttribute("member");

		if (member != null) {
			vo.setUserId(member.getUserId());
			service.addCart(vo);
			result = 1;
		}
		return result;
	}

	@RequestMapping(value = "/cartList", method = RequestMethod.GET)
	public String getCartList(HttpSession session, Model model) throws Exception {
		logger.info("get cart list");

		MemberVO member = (MemberVO) session.getAttribute("member");
		String userId = member.getUserId();

		List<CartListVO> cartList = service.cartList(userId);

		model.addAttribute("cartList", cartList);
		return "shop/cartList";
	}

	// 카트 삭제
	@ResponseBody
	@RequestMapping(value = "/deleteCart", method = RequestMethod.POST)
	public int deleteCart(HttpSession session, @RequestParam(value = "chbox[]") List<String> chArr, CartVO vo)
			throws Exception {
		logger.info("delete cart");

		MemberVO member = (MemberVO) session.getAttribute("member");
		String userId = member.getUserId();

		int result = 0;
		int cartNum = 0;

		if (member != null) {
			vo.setUserId(userId);

			for (String i : chArr) {
				cartNum = Integer.parseInt(i);
				vo.setCartNum(cartNum);
				service.deleteCart(vo);
			}
			result = 1;
		}
		return result;
	}

	// 주문
	@RequestMapping(value = "/order", method = RequestMethod.POST)
	public String order(HttpSession session, OrderVO vo, OrderDetailVO detailVO) throws Exception {
		logger.info("order");

		MemberVO member = (MemberVO) session.getAttribute("member");
		String userId = member.getUserId();

		Calendar cal = Calendar.getInstance();
		int year = cal.get(Calendar.YEAR);
		String ym = year + new DecimalFormat("00").format(cal.get(Calendar.MONTH) + 1);
		String ymd = ym + new DecimalFormat("00").format(cal.get(Calendar.DATE));
		String subNum = "";

		for (int i = 1; i <= 6; i++) {
			subNum += (int) (Math.random() * 10);
		}

		String orderId = ymd + "_" + subNum;

		vo.setOrderId(orderId);
		vo.setUserId(userId);

		service.orderInfo(vo);
		detailVO.setOrderId(orderId);
		service.orderInfo_Details(detailVO);

		service.cartAllDelete(userId);
		return "redirect:/shop/orderList";
	}

	// 주문 상세 목록
	@RequestMapping(value = "/orderList", method = RequestMethod.GET)
	public String getOrderList(HttpSession session,
	      @RequestParam("n") String orderId,
	      OrderVO order, Model model) throws Exception {
	 logger.info("get order view");
	 
	 MemberVO member = (MemberVO)session.getAttribute("member");
	 String userId = member.getUserId();
	 
	 order.setUserId(userId);
	 order.setOrderId(orderId);
	 
	 List<OrderListVO> orderView = service.orderView(order);
	 
	 model.addAttribute("orderView", orderView);
	 return "shop/orderList";
	}
}
